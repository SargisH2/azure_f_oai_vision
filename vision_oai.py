import base64
from openai import OpenAI



def create_image_data(url: str) -> dict:
    """
    Helper function to create image data dictionary.
    
    Parameters:
    url (str): The URL or file path of the image.
    
    Returns:
    dict: Dictionary containing the image type and URL or base64 encoded string.
    """
    if url.startswith('http'):
        return {
            "type": "image_url",
            "image_url": {
                "url": url,
            },
        }
    else:
        with open(url, "rb") as image_file:
            base64_image =  base64.b64encode(image_file.read()).decode('utf-8')
            
        return {
            "type": "image_url",
            "image_url": {
                "url": f"data:image/jpeg;base64,{base64_image}"
            },
        }

def images_prompt(api_key: str, prompt: str, *urls: str) -> str:
    """
    Generate a response from a chat model using a prompt and multiple images.
    
    Parameters:
    prompt (str): The text prompt to be sent to the model.
    *urls (str): Variable length argument list of URLs or file paths for the images.
    
    Returns:
    str: The content of the response generated by the model.
    
    The function checks if the image URLs start with 'http'. If they do, it uses them as is.
    Otherwise, it reads the images from the provided file paths, encodes them to base64, 
    and formats them appropriately. It then sends a chat completion request to the model
    with the prompt and the images.
    """
    images = [create_image_data(url) for url in urls]
    
    client = OpenAI(
        api_key=api_key
    )
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {
                "role": "user",
                "content": [
                    {"type": "text", "text": prompt},
                    *images
                ],
            }
        ]
    )
    
    return response.choices[0].message.content
